---
// src/pages/projects.astro - Simple project management page
import Layout from '../layouts/Layout.astro';
---

<Layout title="Manage Projects">
  <main class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold text-gray-900 mb-8">Manage Projects</h1>
    
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      <!-- Create Project Form -->
      <div>
        <h2 class="text-xl font-semibold mb-4">Create New Project</h2>
        <form id="project-form" class="space-y-4 p-6 bg-white rounded-lg shadow">
          <div>
            <label for="name" class="block text-sm font-medium text-gray-700">Project Name</label>
            <input 
              type="text" 
              id="name" 
              name="name" 
              required
              class="mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 p-2"
            >
          </div>

          <div>
            <label for="description" class="block text-sm font-medium text-gray-700">Description</label>
            <textarea 
              id="description" 
              name="description" 
              rows="3"
              class="mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 p-2"
            ></textarea>
          </div>

          <div>
            <label for="color" class="block text-sm font-medium text-gray-700">Color</label>
            <input 
              type="color" 
              id="color" 
              name="color" 
              value="#3b82f6"
              class="mt-1 block w-full h-10 rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
            >
          </div>

          <button 
            type="submit"
            class="w-full bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
          >
            Create Project
          </button>
        </form>
      </div>
      
      <!-- Existing Projects -->
      <div>
        <h2 class="text-xl font-semibold mb-4">Existing Projects</h2>
        <div id="projects-list" class="space-y-4">
          <!-- Projects will be loaded here -->
        </div>
      </div>
    </div>
    
    <div class="mt-8 text-center">
      <a href="/" class="bg-gray-600 text-white py-2 px-4 rounded-md hover:bg-gray-700">
        Back to Todos
      </a>
    </div>
  </main>
</Layout>

<script>
  async function loadProjects() {
    try {
      const response = await fetch('/api/projects');
      const projects = await response.json();
      const container = document.getElementById('projects-list');
      
      container.innerHTML = '';
      
      if (projects.length === 0) {
        container.innerHTML = '<p class="text-gray-500">No projects yet. Create your first project!</p>';
        return;
      }
      
      projects.forEach(project => {
        const projectDiv = document.createElement('div');
        projectDiv.className = 'bg-white rounded-lg shadow p-4 border-l-4';
        projectDiv.style.borderLeftColor = project.color;
        
        projectDiv.innerHTML = `
          <h3 class="font-semibold text-lg text-gray-800">${project.name}</h3>
          <p class="text-gray-600 text-sm mt-1">${project.description || 'No description'}</p>
          <p class="text-xs text-gray-500 mt-2">Created: ${new Date(project.created_at).toLocaleDateString()}</p>
        `;
        
        container.appendChild(projectDiv);
      });
      
    } catch (error) {
      console.error('Failed to load projects:', error);
      document.getElementById('projects-list').innerHTML = '<p class="text-red-500">Failed to load projects</p>';
    }
  }
  
  // Handle project form submission
  document.getElementById('project-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(e.target);
    const projectData = {
      name: formData.get('name'),
      description: formData.get('description'),
      color: formData.get('color')
    };

    try {
      const response = await fetch('/api/projects', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(projectData)
      });

      if (response.ok) {
        e.target.reset();
        loadProjects(); // Refresh the projects list
        alert('Project created successfully!');
      } else {
        const error = await response.json();
        alert('Error creating project: ' + (error.message || 'Unknown error'));
      }
    } catch (error) {
      alert('Network error: ' + error.message);
    }
  });
  
  // Load projects when page loads
  loadProjects();
</script>
